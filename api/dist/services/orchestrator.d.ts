import { CacheManager } from '../utils/cache';
import { RateLimitManager } from '../utils/rateLimiter';
import { TokenSummary, CEXListingEvent, HealthCheckResponse, RadarConfig } from '../types';
export declare class Orchestrator {
    private cache;
    private rateLimiter;
    private dataCollector;
    private secAuditor;
    private scorer;
    private alerter;
    private isRunning;
    private refreshInterval;
    private sentinelInterval;
    private pinnedTokens;
    private lastSnapshot;
    private config;
    private hotlistSubscribers;
    private listingSubscribers;
    constructor(cache: CacheManager, rateLimiter: RateLimitManager);
    private setupDataCollectorListeners;
    private processPairUpdates;
    private convertToDexScreenerPair;
    private loadConfig;
    private saveRadarOnlyConfigSnapshot;
    start(): Promise<void>;
    shutdown(): Promise<void>;
    private startRefreshCycle;
    private startCleanupTasks;
    private runDataPipeline;
    private collectDataFromAllChains;
    private performSecurityAnalysis;
    private generateTokenSummaries;
    private applyFilters;
    private mergeWithPinnedTokens;
    private updateHotlistCache;
    private processAlerts;
    handleCEXListing(event: CEXListingEvent): Promise<void>;
    private findTokenInSnapshot;
    private createMinimalTokenSummary;
    private getListingBoost;
    private cleanupPinnedTokens;
    getHealthStatus(): Promise<HealthCheckResponse>;
    private performHealthCheck;
    subscribeToHotlist(callback: (data: TokenSummary[]) => void): () => void;
    subscribeToListings(callback: (event: CEXListingEvent) => void): () => void;
    private notifyHotlistSubscribers;
    private notifyListingSubscribers;
    getHotlist(): Promise<TokenSummary[]>;
    getTopTokens(limit?: number): Promise<TokenSummary[]>;
    getLeaderboards(): Promise<Record<import("../types").LeaderboardCategory, TokenSummary[]>>;
    getConfig(): RadarConfig;
    updateConfig(newConfig: Partial<RadarConfig>): void;
}
//# sourceMappingURL=orchestrator.d.ts.map